#ifndef __SPI_HAL_H__
#define __SPI_HAL_H__

#include <stdint.h>
#include <stdbool.h>

#define SPI_HAL_IMU_BUFFER_SIZE     20

typedef enum ImuRegisters {
    IMU_REG_SELF_TEST_X_GYRO =   0x00,
    IMU_REG_SELF_TEST_Y_GYRO =   0x01,
    IMU_REG_SELF_TEST_Z_GYRO =   0x02,
    IMU_REG_SELF_TEST_X_ACCEL =  0x0D,
    IMU_REG_SELF_TEST_Y_ACCEL =  0x0E,
    IMU_REG_SELF_TEST_Z_ACCEL =  0x0F,
    IMU_REG_XG_OFFSET_H =        0x13,
    IMU_REG_XG_OFFSET_L =        0x14,
    IMU_REG_YG_OFFSET_H =        0x15,
    IMU_REG_YG_OFFSET_L =        0x16,
    IMU_REG_ZG_OFFSET_H =        0x17,
    IMU_REG_ZG_OFFSET_L =        0x18,
    IMU_REG_SMPLRT_DIV =         0x19,
    IMU_REG_CONFIG =             0x1A,
    IMU_REG_GYRO_CONFIG =        0x1B,
    IMU_REG_ACCEL_CONFIG =       0x1C,
    IMU_REG_ACCEL_CONFIG_2 =     0x1D,
    IMU_REG_LP_ACCEL_ODR =       0x1E,
    IMU_REG_WOM_THR =            0x1F,
    IMU_REG_FIFO_EN =            0x23,
    IMU_REG_I2C_MST_CTRL =       0x24,
    IMU_REG_I2C_SLV0_ADDR =      0x25,
    IMU_REG_I2C_SLV0_REG =       0x26,
    IMU_REG_I2C_SLV0_CTRL =      0x27,
    IMU_REG_I2C_SLV1_ADDR =      0x28,
    IMU_REG_I2C_SLV1_REG =       0x29,
    IMU_REG_I2C_SLV1_CTRL =      0x2A,
    IMU_REG_I2C_SLV2_ADDR =      0x2B,
    IMU_REG_I2C_SLV2_REG =       0x2C,
    IMU_REG_I2C_SLV2_CTRL =      0x2D,
    IMU_REG_I2C_SLV3_ADDR =      0x2E,
    IMU_REG_I2C_SLV3_REG =       0x2F,
    IMU_REG_I2C_SLV3_CTRL =      0x30,
    IMU_REG_I2C_SLV4_ADDR =      0x31,
    IMU_REG_I2C_SLV4_REG =       0x32,
    IMU_REG_I2C_SLV4_DO =        0x33,
    IMU_REG_I2C_SLV4_CTRL =      0x34,
    IMU_REG_I2C_SLV4_DI =        0x35,
    IMU_REG_I2C_MST_STATUS =     0x36,
    IMU_REG_INT_PIN_CFG =        0x37,
    IMU_REG_INT_ENABLE =         0x38,
    IMU_REG_INT_STATUS =         0x3A,
    IMU_REG_ACCEL_XOUT_H =       0x3B,
    IMU_REG_ACCEL_XOUT_L =       0x3C,
    IMU_REG_ACCEL_YOUT_H =       0x3D,
    IMU_REG_ACCEL_YOUT_L =       0x3E,
    IMU_REG_ACCEL_ZOUT_H =       0x3F,
    IMU_REG_ACCEL_ZOUT_L =       0x40,
    IMU_REG_TEMP_OUT_H =         0x41,
    IMU_REG_TEMP_OUT_L =         0x42,
    IMU_REG_GYRO_XOUT_H =        0x43,
    IMU_REG_GYRO_XOUT_L =        0x44,
    IMU_REG_GYRO_YOUT_H =        0x45,
    IMU_REG_GYRO_YOUT_L =        0x46,
    IMU_REG_GYRO_ZOUT_H =        0x47,
    IMU_REG_GYRO_ZOUT_L =        0x48,
    IMU_REG_EXT_SENS_DATA_00 =   0x49,
    IMU_REG_EXT_SENS_DATA_01 =   0x4A,
    IMU_REG_EXT_SENS_DATA_02 =   0x4B,
    IMU_REG_EXT_SENS_DATA_03 =   0x4C,
    IMU_REG_EXT_SENS_DATA_04 =   0x4D,
    IMU_REG_EXT_SENS_DATA_05 =   0x4E,
    IMU_REG_EXT_SENS_DATA_06 =   0x4F,
    IMU_REG_EXT_SENS_DATA_07 =   0x50,
    IMU_REG_EXT_SENS_DATA_08 =   0x51,
    IMU_REG_EXT_SENS_DATA_09 =   0x52,
    IMU_REG_EXT_SENS_DATA_10 =   0x53,
    IMU_REG_EXT_SENS_DATA_11 =   0x54,
    IMU_REG_EXT_SENS_DATA_12 =   0x55,
    IMU_REG_EXT_SENS_DATA_13 =   0x56,
    IMU_REG_EXT_SENS_DATA_14 =   0x57,
    IMU_REG_EXT_SENS_DATA_15 =   0x58,
    IMU_REG_EXT_SENS_DATA_16 =   0x59,
    IMU_REG_EXT_SENS_DATA_17 =   0x5A,
    IMU_REG_EXT_SENS_DATA_18 =   0x5B,
    IMU_REG_EXT_SENS_DATA_19 =   0x5C,
    IMU_REG_EXT_SENS_DATA_20 =   0x5D,
    IMU_REG_EXT_SENS_DATA_21 =   0x5E,
    IMU_REG_EXT_SENS_DATA_22 =   0x5F,
    IMU_REG_EXT_SENS_DATA_23 =   0x60,
    IMU_REG_I2C_SLV0_DO =        0x63,
    IMU_REG_I2C_SLV1_DO =        0x64,
    IMU_REG_I2C_SLV2_DO =        0x65,
    IMU_REG_I2C_SLV3_DO =        0x66,
    IMU_REG_I2C_MST_DELAY_CTRL = 0x67,
    IMU_REG_SIGNAL_PATH_RESET =  0x68,
    IMU_REG_MOT_DETECT_CTRL =    0x69,
    IMU_REG_USER_CTRL =          0x6A,
    IMU_REG_PWR_MGMT_1 =         0x6B,
    IMU_REG_PWR_MGMT_2 =         0x6C,
    IMU_REG_FIFO_COUNTH =        0x72,
    IMU_REG_FIFO_COUNTL =        0x73,
    IMU_REG_FIFO_R_W =           0x74,
    IMU_REG_WHO_AM_I =           0x75,
    IMU_REG_XA_OFFSET_H =        0x77,
    IMU_REG_XA_OFFSET_L =        0x78,
    IMU_REG_YA_OFFSET_H =        0x7A,
    IMU_REG_YA_OFFSET_L =        0x7B,
    IMU_REG_ZA_OFFSET_H =        0x7D,
    IMU_REG_ZA_OFFSET_L =        0x7E,
} ImuRegisters;

void spiHalImuInit(void (*spiBuffReadyCallback)(void));
void spiHalImuReadOutStart(void);
uint8_t * spiHalImuGetBuffer(void);
uint8_t spiHalImuReadReg(const uint8_t reg);
void spiHalImuWriteReg(const uint8_t reg, const uint8_t value);

#endif
